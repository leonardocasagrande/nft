import { Box, Button, Container, Typography } from '@mui/material';
import type { NextPage } from 'next';
import Head from 'next/head';
import React, { useState } from 'react';
import { useTranslation } from 'react-i18next';
import CreateAccountDialog from 'components/CreateAccountDialog';
import Header from 'components/Header';
import { TUserType } from 'types';

const Home: NextPage = () => {
  const { t } = useTranslation();
  const [createAccountOpen, setCreateAccountOpen] = useState(false);
  const [createUserType, setCreateUserType] = useState<TUserType | null>(null);

  const handleOpenCreate = (type: TUserType) => {
    setCreateUserType(type);
    setCreateAccountOpen(true);
  };

  const handleCloseCreate = () => {
    setCreateUserType(null);
    setCreateAccountOpen(false);
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <Header />
        <Box mt={8}>
          <Box mb={2}>
            <Typography variant="h2" color="primary">
              {t('homeTitle')}
            </Typography>
          </Box>
          <Typography variant="subtitle1" color="textSecondary">
            {t('homeSubtitle1')}
          </Typography>
          <Typography variant="subtitle1" color="textSecondary">
            {t('homeSubtitle2')}
          </Typography>
          <Box display="flex" gap={2} mt={4}>
            <Button
              color="primary"
              variant="contained"
              onClick={() => handleOpenCreate('OWNER')}
            >
              {t('ownerBtnTitle')}
            </Button>
            <Button
              color="primary"
              variant="outlined"
              onClick={() => handleOpenCreate('SCHOLAR')}
            >
              {t('scholarBtnTitle')}
            </Button>
          </Box>
        </Box>
      </Container>
      {!!createUserType && (
        <CreateAccountDialog
          open={createAccountOpen}
          onClose={handleCloseCreate}
          userType={createUserType}
        />
      )}
    </div>
  );
};

export default Home;
